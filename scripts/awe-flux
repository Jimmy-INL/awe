#!/usr/bin/env python

import os
import numpy as np
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
from optparse import OptionParser

def calAgFlux(flux):
    agflux = []
    for i in range(len(flux)):
        agflux.append(sum(flux[0:i+1])/(i+1))
    return agflux

def calFlux(trans,tlagIter):
    flux = []
    for i in range(len(trans)):
        flux.append(trans[i]/(tlagIter))
    return flux

def extractTrans(trans):
    ftrans = []
    btrans = []
    #forward flux blue to red
    for i in range(2,len(trans),2):
        ftrans.append(trans[i][1]/(trans[i][0]+trans[i][1]))
    #backward flux red to blue
    for i in range(3,len(trans),2):
        btrans.append(trans[i][0]/(trans[i][0]+trans[i][1]))
    return (ftrans,btrans)

if __name__ == '__main__':
    parser = OptionParser()
    parser.add_option('-i','--inputfile',dest='infile',help='input file name, default:color-transition-matrix.csv',default='color-transition-matrix.csv')
    parser.add_option('-l','--interval',type='float',dest='interval',help='micro-/nano-/pico-/femto- seconds per iteration, default:1',default=1)
    parser.add_option('-o','--outputdir',dest='odir',help='directory of output file,default:./',default='./')

    args = parser.parse_args()
    infile = args[0].infile
    inter = args[0].interval
    odir = args[0].odir

    if not os.path.isdir(odir):
        os.makedirs(odir)
    trans = []
    fd = open(infile,'r')
    for line in fd:
        linec = line.split(',')
        try:
            tmp = [float(linec[0]),float(linec[1])]
        except ValueError:
            continue
        trans.append(tmp)
    colorTrans = np.array(trans)
    ftrans,btrans = extractTrans(colorTrans)
    fflux = calFlux(ftrans,inter)
    bflux = calFlux(btrans,inter)
    agfflux = calAgFlux(fflux)
    agbflux = calAgFlux(bflux)
    fd = open(odir+'/instan-forward-flux.dat','w')
    for data in fflux:
        fd.write(str(data)+'\n')
    fd.close()
    fd = open(odir+'/instan-backward-flux.dat','w')
    for data in bflux:
        fd.write(str(data)+'\n')
    fd.close()
    timetmp = [x for x in range(len(fflux))]
    time = np.array(timetmp)
    plt.plot(time,agfflux)
    plt.xlabel('Iteration')
    plt.ylabel('Flux ')
    plt.savefig(odir+'/forward-flux.png')
    plt.close()
    plt.plot(time,agbflux)
    plt.xlabel('Iteration')
    plt.ylabel('Flux ')
    plt.savefig(odir+'/backward-flux.png')

