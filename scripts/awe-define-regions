#!/usr/bin/env python


import numpy as np
import os
import optparse
import sys


def getopts():

    p = optparse.OptionParser()
    p.add_option('-c', '--cutoff', metavar='<float>', type=float, help='Keep states meeting this cutoff')

    from operator import lt, le, gt, ge
    op_options = {'<' : lt,
                  '<=': le,
                  '>' : gt,
                  '>=': ge}
    p.add_option('-O', '--operator',
                 metavar='<operator>', choices=op_options.keys(),
                 help='One of: %s' % ' '.join(op_options.keys()))

    p.add_option('-i', '--input',  metavar='<path>',  help='Path to RMSD data')
    p.add_option('-o', '--output', metavar='<path>', default='stdout', help='Path to output file [%default]')

    opts, _ = p.parse_args()


    ### post-processing
    opts.operator = op_options[opts.operator]

    outopts = {'-' : sys.stdout}
    opts.output = outopts.get(opts.output, opts.output)


    return opts



def main(opts):

    rmsds  = np.loadtxt(opts.input)
    states = np.arange(len(rmsds))

    ixs = np.where(opts.operator(rmsds, opts.cutoff)) 
    matching = states[ixs]

    print 'Writing', opts.output
    np.savetxt(opts.output, matching, fmt='%d')


if __name__ == '__main__':
    opts = getopts()
    print opts
    main(opts)
