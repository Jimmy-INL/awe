Adaptive Weighted Ensemble or AWE package provides a Python library for
adaptive sampling of molecular dynamics. The framework decomposes the
resampling computations and the molecular dynamics simulations into tasks that
are dispatched to Work Queue for distribution and execution across allocated
resources.

REQUIREMENTS
-------------------------------------------------------------------------------
  - Python 2.6 or higher
  - Numpy 1.5 or higher 
  - Prody 0.9.4
  - Gromacs

INSTALLATION
-------------------------------------------------------------------------------
Run the setup script as: 
  $ python setup.py install --prefix <path/to/installation/directory>

RUNNING  
-------------------------------------------------------------------------------
The example program, awe-alanine-example.py, is a Work Queue master application
runs the awe sampling algorithm on the Alanine DiPeptide protein molecules. To
run this example: 
  $ python awe-alanine-example.py

You will see this right away:
  Running on port 9123...
  Loading cells and walkers
 
The master program successfully started and is loading the cells and walkers
for running the simulations.

Note the master by default assigns a unique project name by subsituting
YOURUSERNAME with the username that invoked the master. For example, if the
username that invoked the example is jdoe, the default project name will be:
awe-jdoe

The master then waits for workers to connect so it can dispatch the simulations
tasks for execution by the connected workers.  

To start a worker for this master, do:
  $ work_queue_worker -a -N awe-YOURUSERNAME 
and substitute your username for YOURUERNAME

simply dothe following components need to be setup and configured. 
  - WorkQueue parameters 
  - System definition that describes the cells and their walkers. 
  - Resampler implementation. 


INPUTS
-------------------------------------------------------------------------------
* Worker Dependencies
  This depends on the MD package used (ie the input to Gromacs differs from that for NAMD), as well as the assignment protocol.
  The example script uses Gromacs in order to run MD and depends on MSMBuilder 2 to assign the resulting trajectories to the cell definitions.

* Contributers
  Please see the AUTHORS file.
