#!/usr/bin/env bash

MAKEFILE_CFG=Makefile.config

### for error reporting on failures
FAILURE_MSG=

### for the Makefile.config
SUBDIRS=(extern assign)
PREFIX=/usr/local


usage() {
	cat <<EOF
$0 [OPTIONS]

OPTIONS:
  --prefix PATH
EOF
}

fail() {
	FAILURE_MSG="$@"
	return 1
}

die() {
	local ecode=$1
	shift
	local msg="$@ $FAILURE_MSG"
	FAILURE_MSG=
	echo $msg
	exit $ecode
}

set-args() {

	local args=($@)
	local opt=
	local val=

	while [ ! -z $1 ]; do
		opt="$1"
		shift

		case $opt in
			--prefix)
				val="$1"; shift
				test ! -z "$val" || return 1
				PREFIX="$val";;
			*)
				usage; exit 1;;
		esac
	done

}


makefile-cfg-array() {
	local name=$1
	local array="${name}[@]"
	echo "$name = ${!array}"
}

makefile-cfg-var() {
	local name=$1
	local val=
	eval val=\$$name
	echo "$name = $val"
}


check-clib() {
	local include="$1"; shift
	local libnames="$@"
	local tmpfile=$(mktemp)
	trap "rm -f '$tmpfile'" RETURN EXIT

	local include_stmt=

	test -z "$include" || include_stmt="#include \"$include\""

	local libs=
	for n in $libnames; do
		libs="$libs -l$n"
	done

	printf "Checking for $libnames..."
	cat <<EOF | gcc -xc $libs -o $tmpfile -
$include_stmt
int main (void) { return 0; }
EOF
	ecode=$?

	if test ! $ecode -eq 0; then
		echo FAIL
		return 1
	else
		echo OK
		return 0
	fi
}


check-build-depends() {
	check-clib xdrfile/xdrfile.h xdrfile        || return 1
	check-clib gsl/gsl_matrix.h  gsl gslcblas   || return 1
}

check-run-depends() {
	./executables/awe-verify
	if test ! $? -eq 0; then
		echo "WARNING: could not find runtime dependencies"
	fi
}

trap cleanup EXIT SIGINT SIGKILL SIGTERM
set-args $@ || die 1

rm -f $MAKEFILE_CFG
check-build-depends || die 2
check-run-depends
makefile-cfg-array SUBDIRS >>$MAKEFILE_CFG
makefile-cfg-var PREFIX    >>$MAKEFILE_CFG
