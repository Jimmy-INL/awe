#!/usr/local/opt/python/bin/python2.7

import msmbuilder as msmb
from msmbuilder.metrics import RMSD

import numpy as np

import argparse

def getopts():
    p = argparse.ArgumentParser()
    p.add_argument('-r', '--reference')
    p.add_argument('-n', '--ndx')
    p.add_argument('-g', '--gens', default='Data/Gens.lh5', help='[%(default)s]')
    p.add_argument('-o', '--outfile', default='RMSD.dat', help='[%(default)s]')
    return p.parse_args()


def main(opts):
    metric = RMSD()

    # load files
    print 'Loading files'
    pdb  = msmb.Trajectory.load_trajectory_file(opts.reference)
    gens = msmb.Trajectory.load_trajectory_file(opts.gens)
    ndx  = np.loadtxt(opts.ndx) - 1 # make sure indices match up with reference pdb

    # select atoms
    pdb['XYZList'] = np.array([pdb['XYZList'][0,list(ndx)]])

    # compute rmsd
    print 'Computing RMSD'
    p_pdb  = metric.prepare_trajectory(pdb)
    p_gens = metric.prepare_trajectory(gens)
    dists  = metric.one_to_all(p_pdb, p_gens, 0)

    # save results
    print 'Saving to', opts.outfile
    np.savetxt(opts.outfile, dists)


if __name__ == '__main__':
    main(getopts())
